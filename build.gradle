apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'signing'

apply from: "$rootDir/gradle/release.gradle"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile 'net.openhft:affinity:3.1.13'
    compile 'org.slf4j:slf4j-api:1.7.14'
    compileOnly 'com.google.code.findbugs:jsr305:3.0.1'

    testCompile 'junit:junit:4.+'
}

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

java {
    withJavadocJar()
    withSourcesJar()
}

def rUser = findProperty('SONATYPE_NEXUS_USERNAME') ?:  System.getenv('SONATYPE_NEXUS_USERNAME') ?: "FakeUser"
def rPass = findProperty('SONATYPE_NEXUS_PASSWORD') ?:  System.getenv('SONATYPE_NEXUS_PASSWORD') ?: "FakePass"

publishing {
    repositories {
        maven {
            url = findProperty('SONATYPE_REPOSITORY') ?:  System.getenv('SONATYPE_REPOSITORY') ?: "FakeRepo"

            credentials {
                username rUser
                password rPass
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom {
                name = 'thread.affinity'
                packaging = 'jar'
                description = 'A wrapper over net.openhft:affinity providing handy classes to create threads pinned to the specified CPUs.'
                url = 'https://github.com/epam/ThreadAffinity'

                scm {
                    connection = 'scm:git:https://github.com/epam/ThreadAffinity.git'
                    developerConnection = 'scm:git:https://github.com/epam/ThreadAffinity.git'
                    url = 'https://github.com/epam/ThreadAffinity.git'
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'artsiomkorzun'
                        name = 'Artsiom Korzun'
                        email = 'humanfault101@gmail.com'
                        url = 'https://github.com/artsiomkorzun'
                        organization = 'EPAM Systems'
                        organizationUrl = 'https://www.epam.com/'
                    }
                }
            }
        }
    }
}

signing {
    def signingKey = findProperty('SIGNING_PRIVATE_KEY') ?: System.getenv('SIGNING_PRIVATE_KEY') ?: "FakeUser"
    def signingPassword = findProperty('SIGNING_PASSWORD') ?: System.getenv('SIGNING_PASSWORD') ?: "FakePass"

    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.mavenJava

    required { isReleaseVersion }
}

wrapper {
    gradleVersion = '6.8'
    distributionType = Wrapper.DistributionType.BIN
}
